name: 'Build and Deploy'

on:
  push:
    branches: [ "test-lyte" ]
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: test-lyte

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push Laravel
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags: ${{ env.DOCKERHUB_USERNAME }}/laravel-be:1.0.0

      - name: Build and push ReactJS
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/react-fe:1.0.0

  # deploy-to-aws:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   environment: production
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         ref: test-lyte
      
  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ env.EKS_REGION }}
      
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
      
  #     - name: Set AWS Env
  #       run: |
  #         aws --version
  #         aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
  #         aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
  #         aws configure set region $EKS_REGION
  #         aws sts get-caller-identity
  #     - name: Connect to EKS cluster 
  #       run: aws eks --region ${{ secrets.EKS_REGION }} update-kubeconfig --name ${{ secrets.EKS_CLUSTER }}

  #     - name: Deploy to AWS EKS
  #       working-directory: helm-charts
  #       run: |
  #         helm upgrade --install --force "go-app"
  #         helm upgrade --install --force "node-app"